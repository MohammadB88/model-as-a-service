{
    "openapi": "3.0.0",
    "info": {
      "title": "Example API",
      "version": "1.0.0"
    },
    "servers": [
      {
        "url": "https://Main_URL:443"
      }
    ],
    "paths": {
      "/version": {
        "get": {
          "summary": "Retrieve the version of the vLLM runtime",
          "responses": {
            "200": {
              "description": "Successful response with version information",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "string",
                        "example": "v0.1.0"
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/health": {
        "get": {
          "summary": "Check the health status of the vLLM runtime",
          "responses": {
            "200": {
              "description": "Service is healthy",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "healthy"
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/v1/models": {
        "get": {
          "summary": "Retrieve models",
          "operationId": "getModels",
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/v1/completions": {
        "post": {
          "summary": "Generate text completion",
          "operationId": "postCompletions",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "model": {
                      "type": "string",
                      "example": "granite-7b-instruct"
                    },
                    "prompt": {
                      "type": "string",
                      "example": "hello from the other side"
                    },
                    "max_tokens": {
                      "type": "integer",
                      "example": 7
                    },
                    "temperature": {
                      "type": "number",
                      "format": "float",
                      "example": 0.8
                    }
                  },
                  "required": ["model", "prompt", "max_tokens", "temperature"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Completion result",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/v1/chat/completions": {
        "post": {
          "summary": "Generate a chat completion",
          "description": "Creates a model response for the given chat conversation.",
          "operationId": "createChatCompletion",
          "requestBody": {
            "description": "Input for the chat completion",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatCompletionRequest"
                },
                "example": {
                  "model": "granite-7b-instruct",
                  "messages": [
                    {
                      "role": "system",
                      "content": "You are a helpful assistant."
                    },
                    {
                      "role": "user",
                      "content": "Hello!"
                    }
                  ],
                  "max_tokens": 100,
                  "temperature": 0.7
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ChatCompletionResponse"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized"
            },
            "500": {
              "description": "Internal Server Error"
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/tokenize": {
        "post": {
          "summary": "Tokenize input text",
          "operationId": "tokenizeText",
          "requestBody": {
            "description": "Input text to tokenize",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "model": {
                      "type": "string",
                      "description": "Model name to use for tokenization"
                    },
                    "prompt": {
                      "type": "string",
                      "description": "Text to tokenize"
                    }
                  },
                  "required": ["model", "prompt"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Tokenization result",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tokens": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        },
                        "description": "List of token IDs"
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      },
      "/detokenize": {
        "post": {
          "summary": "Detokenize token IDs",
          "operationId": "detokenizeTokens",
          "requestBody": {
            "description": "Token IDs to detokenize",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "model": {
                      "type": "string",
                      "description": "Model name to use for detokenization"
                    },
                    "tokens": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "description": "List of token IDs"
                    }
                  },
                  "required": ["model", "tokens"]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Detokenization result",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "text": {
                        "type": "string",
                        "description": "Detokenized text"
                      }
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ]
        }
      }
    },
    "components": {
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "schemas": {
        "ChatCompletionRequest": {
          "type": "object",
          "properties": {
            "model": {
              "type": "string",
              "example": "granite-7b-instruct"
            },
            "messages": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": ["system", "user", "assistant"]
                  },
                  "content": {
                    "type": "string"
                  }
                },
                "required": ["role", "content"]
              }
            },
            "max_tokens": {
              "type": "integer",
              "example": 100
            },
            "temperature": {
              "type": "number",
              "format": "float",
              "example": 0.7
            }
          },
          "required": ["model", "messages"]
        },
        "ChatCompletionResponse": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "object": {
              "type": "string"
            },
            "created": {
              "type": "integer"
            },
            "model": {
              "type": "string"
            },
            "choices": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "index": {
                    "type": "integer"
                  },
                  "message": {
                    "type": "object",
                    "properties": {
                      "role": {
                        "type": "string"
                      },
                      "content": {
                        "type": "string"
                      }
                    }
                  },
                  "finish_reason": {
                    "type": "string"
                  }
                }
              }
            },
            "usage": {
              "type": "object",
              "properties": {
                "prompt_tokens": {
                  "type": "integer"
                },
                "completion_tokens": {
                  "type": "integer"
                },
                "total_tokens": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    }
  }